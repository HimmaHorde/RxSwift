{"Other Typealiases.html#/s:7RxSwift0A12TimeIntervala":{"name":"RxTimeInterval","abstract":"<p>Undocumented</p>"},"Other Typealiases.html#/s:7RxSwift0A4Timea":{"name":"RxTime","abstract":"<p>Rx的日期类型 = Date</p>"},"Other Typealiases.html#/s:7RxSwift0A15AbstractIntegera":{"name":"RxAbstractInteger","abstract":"<p>Undocumented</p>"},"Structs/Resources.html#/total":{"name":"total","abstract":"<p>Counts internal Rx resource allocations (Observables, Observers, Disposables, etc.). This provides a simple way to detect leaks during development.</p>","parent_name":"Resources"},"Structs/Resources.html#/incrementTotal()":{"name":"incrementTotal()","abstract":"<p>Increments <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Resources.html#/total\">Resources.total</a></code> resource count.</p>","parent_name":"Resources"},"Structs/Resources.html#/decrementTotal()":{"name":"decrementTotal()","abstract":"<p>Decrements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Resources.html#/total\">Resources.total</a></code> resource count</p>","parent_name":"Resources"},"Structs/Resources.html#/numberOfMapOperators":{"name":"numberOfMapOperators","parent_name":"Resources"},"Structs/Resources.html#/numberOfSerialDispatchQueueObservables":{"name":"numberOfSerialDispatchQueueObservables","abstract":"<p>Counts number of <code>SerialDispatchQueueObservables</code>.</p>","parent_name":"Resources"},"Structs/Resources.html":{"name":"Resources","abstract":"<p>Resource utilization information</p>"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypeP05TraitE0Qa":{"name":"TraitType","abstract":"<p>用于判断特征</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypeP07ElementE0Qa":{"name":"ElementType","abstract":"<p>序列元素类型</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypeP09primitiveD0AA0cD0Vy05TraitE0Qz07ElementE0QzGvp":{"name":"primitiveSequence","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE7andThenyAA0cD0VyAA06SingleI0Oqd__GAQlF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE7andThenyAA0cD0VyAA05MaybeI0Oqd__GAQlF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE7andThenyAA0cD0VyAiEGAOF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE7andThenyAA10ObservableCyqd__GAOlF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE0H8Observera":{"name":"CompletableObserver","abstract":"<p>Undocumented</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE6create9subscribeAA0cD0VyAiEGAA10Disposable_pyAA0H5EventOcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE9subscribeyAA10Disposable_pyAA0H5EventOcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE9subscribe11onCompleted0K5ErrorAA10Disposable_pyycSg_ys0M0_pcSgtF":{"name":"subscribe(onCompleted:onError:)","abstract":"<p>Subscribes a completion handler and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE5erroryAA0cD0VyAiEGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE5neverAA0cD0VyAiEGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE5emptyAA0cD0VyAiEGyFZ":{"name":"empty()","abstract":"<p>Returns an empty observable sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE2do7onError0K9Completed0K9Subscribe0K10Subscribed0K7DisposeAA0cD0VyAiEGys0L0_pKcSg_yyKcSgyycSgA2XtF":{"name":"do(onError:onCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE6concatyAA0cD0VyAiEGAOF":{"name":"concat(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE6concatyAA0cD0VyAiEGqd__STRd__AO0G0Rtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE6concatyAA0cD0VyAiEGqd__SlRd__AO0G0Rtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE6concatyAA0cD0VyAiEGAOd_tFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE5mergeyAA0cD0VyAiEGqd__SlRd__AO0G0Rtd__lFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from collection into a single observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE5mergeyAA0cD0VyAiEGSayAOGFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from array into a single observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO07ElementE0RtzAA16CompletableTraitO0iE0RtzrlE5mergeyAA0cD0VyAiEGAOd_tFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences into a single observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE0F8Observera":{"name":"MaybeObserver","abstract":"<p>Undocumented</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE6create9subscribeAA0cD0VyAE07ElementE0QzGAA10Disposable_pyAA0F5EventOyAMGcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE9subscribeyAA10Disposable_pyAA0F5EventOy07ElementE0QzGcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE9subscribe9onSuccess0I5Error0I9CompletedAA10Disposable_py07ElementE0QzcSg_ys0K0_pcSgyycSgtF":{"name":"subscribe(onSuccess:onError:onCompleted:)","abstract":"<p>Subscribes a success handler, an error handler, and a completion handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE4justyAA0cD0VyAE07ElementE0QzGALFZ":{"name":"just(_:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE4just_9schedulerAA0cD0VyAE07ElementE0QzGAM_AA018ImmediateSchedulerE0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE5erroryAA0cD0VyAE07ElementE0QzGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE5neverAA0cD0VyAE07ElementE0QzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE5emptyAA0cD0VyAE07ElementE0QzGyFZ":{"name":"empty()","abstract":"<p>Returns an empty observable sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE2do6onNext0I5Error0I9Completed0I9Subscribe0I10Subscribed0I7DisposeAA0cD0VyAE07ElementE0QzGyARKcSg_ys0K0_pKcSgyyKcSgyycSgA2XtF":{"name":"do(onNext:onError:onCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE6filteryAA0cD0VyAE07ElementE0QzGSbALKcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3mapyAA0cD0VyAEqd__Gqd__07ElementE0QzKclF":{"name":"map(_:)","abstract":"<p>Projects each element of an observable sequence into a new form.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE7flatMapyAA0cD0VyAEqd__GAK07ElementE0QzKclF":{"name":"flatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE7ifEmpty7defaultAA0cD0VyAA06SingleG0O07ElementE0QzGAO_tF":{"name":"ifEmpty(default:)","abstract":"<p>Emits elements from the source observable sequence, or a default element if the source observable sequence is empty.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE7ifEmpty8switchToAA0cD0VyAE07ElementE0QzGAN_tF":{"name":"ifEmpty(switchTo:)","abstract":"<p>Returns the elements of the specified sequence or <code>switchTo</code> sequence if the sequence is empty.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE7ifEmpty8switchToAA0cD0VyAA06SingleG0O07ElementE0QzGAP_tF":{"name":"ifEmpty(switchTo:)","abstract":"<p>Returns the elements of the specified sequence or <code>switchTo</code> sequence if the sequence is empty.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE20catchErrorJustReturnyAA0cD0VyAE07ElementE0QzGALF":{"name":"catchErrorJustReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip__14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAMqd___qd_0_tKctr0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_tGALyAGqd__G_ALyAGqd_0_Gtr0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip__14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAMqd___qd_0_tKctr0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_tGALyAGqd__G_ALyAGqd_0_Gtr0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip___14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAMqd___qd_0_qd_1_tKctr1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_Gtr1_lFZ":{"name":"zip(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip___14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAMqd___qd_0_qd_1_tKctr1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_Gtr1_lFZ":{"name":"zip(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip____14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAMqd___qd_0_qd_1_qd_2_tKctr2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_Gtr2_lFZ":{"name":"zip(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip____14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAMqd___qd_0_qd_1_qd_2_tKctr2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_Gtr2_lFZ":{"name":"zip(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip_____14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAMqd___qd_0_qd_1_qd_2_qd_3_tKctr3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_Gtr3_lFZ":{"name":"zip(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip_____14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAMqd___qd_0_qd_1_qd_2_qd_3_tKctr3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_Gtr3_lFZ":{"name":"zip(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip______14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_tKctr4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_Gtr4_lFZ":{"name":"zip(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip______14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_tKctr4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_Gtr4_lFZ":{"name":"zip(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip_______14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tKctr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_Gtr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip_______14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tKctr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_Gtr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zip________14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAKyAEqd_6_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tKctr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA11SingleTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_GALyAGqd_6_Gtr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0gE0RtzrlE3zip________14resultSelectorAA0cD0VyAE07ElementE0QzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAKyAEqd_6_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tKctr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp07ElementE0RtzAA10MaybeTraitO0hE0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_GALyAGqd_6_Gtr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs17FixedWidthInteger07ElementE0RpzrlE5timer_9schedulerAA0cD0Vy05TraitE0QzAFGSd_AA09SchedulerE0_ptFZ":{"name":"timer(_:scheduler:)","abstract":"<p>Returns an observable sequence that periodically produces a value after the specified initial relative due time has elapsed, using the specified scheduler to run timers.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE0F8Observera":{"name":"SingleObserver","abstract":"<p>Undocumented</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE6create9subscribeAA0cD0VyAE07ElementE0QzGAA10Disposable_pyAA0F5EventOyAMGcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE9subscribeyAA10Disposable_pyAA0F5EventOy07ElementE0QzGcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE9subscribe9onSuccess0I5ErrorAA10Disposable_py07ElementE0QzcSg_ys0K0_pcSgtF":{"name":"subscribe(onSuccess:onError:)","abstract":"<p>Subscribes a success handler, and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE4justyAA0cD0VyAE07ElementE0QzGALFZ":{"name":"just(_:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE4just_9schedulerAA0cD0VyAE07ElementE0QzGAM_AA018ImmediateSchedulerE0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE5erroryAA0cD0VyAE07ElementE0QzGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE5neverAA0cD0VyAE07ElementE0QzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE2do9onSuccess0I5Error0I9Subscribe0I10Subscribed0I7DisposeAA0cD0VyAE07ElementE0QzGyAQKcSg_ys0K0_pKcSgyycSgA2VtF":{"name":"do(onSuccess:onError:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE2do6onNext0I5Error0I9Subscribe0I10Subscribed0I7DisposeAA0cD0VyAE07ElementE0QzGyAQKcSg_ys0K0_pKcSgyycSgA2VtF":{"name":"do(onNext:onError:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE6filteryAA0cD0VyAA05MaybeG0O07ElementE0QzGSbANKcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3mapyAA0cD0VyAEqd__Gqd__07ElementE0QzKclF":{"name":"map(_:)","abstract":"<p>Projects each element of an observable sequence into a new form.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE7flatMapyAA0cD0VyAEqd__GAK07ElementE0QzKclF":{"name":"flatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE12flatMapMaybeyAA0cD0VyAA0jG0Oqd__GAM07ElementE0QzKclF":{"name":"flatMapMaybe(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE18flatMapCompletableyAA0cD0VyAA0jG0Os5NeverOGAO07ElementE0QzKcF":{"name":"flatMapCompletable(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zipyAA0cD0VyAEqd_0_Gqd___qd_0_Say07ElementE0QzGKctSlRd__AJyAeMG0I0Rtd__r0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE3zipyAA0cD0VyAESay07ElementE0QzGGqd__SlRd__AJyAeLG0I0Rtd__lFZ":{"name":"zip(_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE20catchErrorJustReturnyAA0cD0VyAE07ElementE0QzGALF":{"name":"catchErrorJustReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE7asMaybeAA0cD0VyAA0iG0O07ElementE0QzGyF":{"name":"asMaybe()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift/Traits.html#/s:7RxSwift5Maybea\">Maybe</a></code> trait.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0gE0RtzrlE13asCompletableAA0cD0VyAA0iG0Os5NeverOGyF":{"name":"asCompletable()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift/Traits.html#/s:7RxSwift11Completablea\">Completable</a></code> trait.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/ReactiveCompatible.html#/s:7RxSwift18ReactiveCompatibleP0D4TypeQa":{"name":"CompatibleType","abstract":"<p>Extended type</p>","parent_name":"ReactiveCompatible"},"Protocols/ReactiveCompatible.html#/s:7RxSwift18ReactiveCompatibleP2rxAA0C0Vy0D4TypeQzGmvpZ":{"name":"rx","abstract":"<p>Reactive extensions.</p>","parent_name":"ReactiveCompatible"},"Protocols/ReactiveCompatible.html#/s:7RxSwift18ReactiveCompatibleP2rxAA0C0Vy0D4TypeQzGvp":{"name":"rx","abstract":"<p>Reactive extensions.</p>","parent_name":"ReactiveCompatible"},"Protocols/EventConvertible.html#/s:7RxSwift16EventConvertibleP11ElementTypeQa":{"name":"ElementType","abstract":"<p>事件中元素的类型</p>","parent_name":"EventConvertible"},"Protocols/EventConvertible.html#/s:7RxSwift16EventConvertibleP5eventAA0C0Oy11ElementTypeQzGvp":{"name":"event","abstract":"<p>此实例的事件表示形式</p>","parent_name":"EventConvertible"},"Protocols/EventConvertible.html":{"name":"EventConvertible","abstract":"<p>可以转换为 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html\">Event&lt;Element&gt;</a></code> 的类型的协议.</p>"},"Protocols/ReactiveCompatible.html":{"name":"ReactiveCompatible","abstract":"<p>A type that has reactive extensions.</p>"},"Protocols/PrimitiveSequenceType.html":{"name":"PrimitiveSequenceType","abstract":"<p>包含0或1个元素的可观察序列的协议</p>"},"Enums/SingleEvent.html#/s:7RxSwift11SingleEventO7successyACyxGxcAEmlF":{"name":"success(_:)","abstract":"<p>One and only sequence element is produced. (underlying observable sequence emits: <code>.next(Element)</code>, <code>.completed</code>)</p>","parent_name":"SingleEvent"},"Enums/SingleEvent.html#/s:7RxSwift11SingleEventO5erroryACyxGs5Error_pcAEmlF":{"name":"error(_:)","abstract":"<p>Sequence terminated with an error. (underlying observable sequence emits: <code>.error(Error)</code>)</p>","parent_name":"SingleEvent"},"Enums/MaybeEvent.html#/s:7RxSwift10MaybeEventO7successyACyxGxcAEmlF":{"name":"success(_:)","abstract":"<p>One and only sequence element is produced. (underlying observable sequence emits: <code>.next(Element)</code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/MaybeEvent.html#/s:7RxSwift10MaybeEventO9completedyACyxGAEmlF\">.completed</a></code>)</p>","parent_name":"MaybeEvent"},"Enums/MaybeEvent.html#/s:7RxSwift10MaybeEventO5erroryACyxGs5Error_pcAEmlF":{"name":"error(_:)","abstract":"<p>Sequence terminated with an error. (underlying observable sequence emits: <code>.error(Error)</code>)</p>","parent_name":"MaybeEvent"},"Enums/MaybeEvent.html#/s:7RxSwift10MaybeEventO9completedyACyxGAEmlF":{"name":"completed","abstract":"<p>Sequence completed successfully.</p>","parent_name":"MaybeEvent"},"Enums/CompletableEvent.html#/s:7RxSwift16CompletableEventO5erroryACs5Error_pcACmF":{"name":"error(_:)","abstract":"<p>Sequence terminated with an error. (underlying observable sequence emits: <code>.error(Error)</code>)</p>","parent_name":"CompletableEvent"},"Enums/CompletableEvent.html#/s:7RxSwift16CompletableEventO9completedyA2CmF":{"name":"completed","abstract":"<p>Sequence completed successfully.</p>","parent_name":"CompletableEvent"},"Enums/VirtualTimeComparison.html#/s:7RxSwift21VirtualTimeComparisonO8lessThanyA2CmF":{"name":"lessThan","abstract":"<p>lhs &lt; rhs.</p>","parent_name":"VirtualTimeComparison"},"Enums/VirtualTimeComparison.html#/s:7RxSwift21VirtualTimeComparisonO5equalyA2CmF":{"name":"equal","abstract":"<p>lhs == rhs.</p>","parent_name":"VirtualTimeComparison"},"Enums/VirtualTimeComparison.html#/s:7RxSwift21VirtualTimeComparisonO11greaterThanyA2CmF":{"name":"greaterThan","abstract":"<p>lhs &gt; rhs.</p>","parent_name":"VirtualTimeComparison"},"Enums/TakeUntilBehavior.html#/s:7RxSwift17TakeUntilBehaviorO9inclusiveyA2CmF":{"name":"inclusive","abstract":"<p>Include the last element matching the predicate.</p>","parent_name":"TakeUntilBehavior"},"Enums/TakeUntilBehavior.html#/s:7RxSwift17TakeUntilBehaviorO9exclusiveyA2CmF":{"name":"exclusive","abstract":"<p>Exclude the last element matching the predicate.</p>","parent_name":"TakeUntilBehavior"},"Enums/SubjectLifetimeScope.html#/s:7RxSwift20SubjectLifetimeScopeO14whileConnectedyA2CmF":{"name":"whileConnected","abstract":"<p><strong>Each connection will have it&rsquo;s own subject instance to store replay events.</strong>","parent_name":"SubjectLifetimeScope"},"Enums/SubjectLifetimeScope.html#/s:7RxSwift20SubjectLifetimeScopeO7foreveryA2CmF":{"name":"forever","abstract":"<p><strong>One subject will store replay events for all connections to source.</strong>","parent_name":"SubjectLifetimeScope"},"Enums/Hooks.html#/s:7RxSwift5HooksO22recordCallStackOnErrorSbvpZ":{"name":"recordCallStackOnError","abstract":"<p>Undocumented</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO19DefaultErrorHandlera":{"name":"DefaultErrorHandler","abstract":"<p>Undocumented</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO34CustomCaptureSubscriptionCallstacka":{"name":"CustomCaptureSubscriptionCallstack","abstract":"<p>Undocumented</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO19defaultErrorHandleryySaySSG_s0E0_ptcvpZ":{"name":"defaultErrorHandler","abstract":"<p>Error handler called in case onError handler wasn&rsquo;t provided.</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO34customCaptureSubscriptionCallstackSaySSGycvpZ":{"name":"customCaptureSubscriptionCallstack","abstract":"<p>Subscription callstack block to fetch custom callstack information.</p>","parent_name":"Hooks"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO7unknownyA2CmF":{"name":"unknown","abstract":"<p>Unknown error occurred.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO8disposedyACyXl_tcACmF":{"name":"disposed(object:)","abstract":"<p>Performing an action on disposed object.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO8overflowyA2CmF":{"name":"overflow","abstract":"<p>Aritmetic overflow error.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO18argumentOutOfRangeyA2CmF":{"name":"argumentOutOfRange","abstract":"<p>Argument out of range error.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO10noElementsyA2CmF":{"name":"noElements","abstract":"<p>Sequence doesn&rsquo;t contain any elements.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF":{"name":"moreThanOneElement","abstract":"<p>Sequence contains more than one element.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO7timeoutyA2CmF":{"name":"timeout","abstract":"<p>Timeout error.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A textual representation of <code>self</code>, suitable for debugging.</p>","parent_name":"RxError"},"Enums/RxError.html":{"name":"RxError","abstract":"<p>Generic Rx error codes.</p>"},"Enums/Hooks.html":{"name":"Hooks","abstract":"<p>RxSwift global hooks</p>"},"Enums/SubjectLifetimeScope.html":{"name":"SubjectLifetimeScope","abstract":"<p>Subject 生命周期</p>"},"Enums/TakeUntilBehavior.html":{"name":"TakeUntilBehavior","abstract":"<p>Behaviors for the <code>takeUntil(_ behavior:predicate:)</code> operator.</p>"},"Enums/VirtualTimeComparison.html":{"name":"VirtualTimeComparison","abstract":"<p>Virtual time comparison result.</p>"},"Other Enums.html#/s:7RxSwift16CompletableTraitO":{"name":"CompletableTrait","abstract":"<p>Sequence containing 0 elements</p>"},"Enums/CompletableEvent.html":{"name":"CompletableEvent","abstract":"<p>Undocumented</p>"},"Other Enums.html#/s:7RxSwift10MaybeTraitO":{"name":"MaybeTrait","abstract":"<p>Sequence containing 0 or 1 elements</p>"},"Enums/MaybeEvent.html":{"name":"MaybeEvent","abstract":"<p>Undocumented</p>"},"Other Enums.html#/s:7RxSwift11SingleTraitO":{"name":"SingleTrait","abstract":"<p>恰好包含一个元素的序列</p>"},"Enums/SingleEvent.html":{"name":"SingleEvent","abstract":"<p>Undocumented</p>"},"Other Global Variables.html#/s:7RxSwift29maxTailRecursiveSinkStackSizeSivp":{"name":"maxTailRecursiveSinkStackSize","abstract":"<p>Undocumented</p>"},"Classes/ConnectableObservable.html#/s:7RxSwift21ConnectableObservableC7connectAA10Disposable_pyF":{"name":"connect()","abstract":"<p>将可观察包装器连接到它的源。只要建立了连接，所有订阅的观察者都将接收来自底层可观察序列的值。</p>","parent_name":"ConnectableObservable"},"Classes/Variable.html#/s:7RxSwift8VariableC1Ea":{"name":"E","abstract":"<p>Undocumented</p>","parent_name":"Variable"},"Classes/Variable.html#/s:7RxSwift8VariableC5valuexvp":{"name":"value","abstract":"<p>Gets or sets current value of variable.</p>","parent_name":"Variable"},"Classes/Variable.html#/s:7RxSwift8VariableCyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Initializes variable with initial value.</p>","parent_name":"Variable"},"Classes/Variable.html#/s:7RxSwift8VariableC12asObservableAA0E0CyxGyF":{"name":"asObservable()","parent_name":"Variable"},"Classes/Variable.html#/s:7RxSwift8VariableCfd":{"name":"deinit","abstract":"<p>Undocumented</p>","parent_name":"Variable"},"Classes/Variable.html":{"name":"Variable","abstract":"<p>Variable is a wrapper for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BehaviorSubject.html\">BehaviorSubject</a></code>.</p>"},"Classes/ConnectableObservable.html":{"name":"ConnectableObservable","abstract":"<p>对可观察序列进行包装，该包装器可以与其底层可观察序列连接或断开连接。</p>"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9TraitTypea":{"name":"TraitType","abstract":"<p>Additional constraints</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV11ElementTypea":{"name":"ElementType","abstract":"<p>Sequence element type</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV09primitiveD0ACyxq_Gvp":{"name":"primitiveSequence","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV1Ea":{"name":"E","abstract":"<p>Type of elements in sequence.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV12asObservableAA0F0Cyq_GyF":{"name":"asObservable()","abstract":"<p>将自身转换为 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> 序列 (self.source)</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV8deferredyACyxq_GAEyKcFZ":{"name":"deferred(_:)","abstract":"<p>Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5delay_9schedulerACyxq_GSd_AA13SchedulerType_ptF":{"name":"delay(_:scheduler:)","abstract":"<p>Returns an observable sequence by the source observable sequence shifted forward in time by a specified delay. Error events from the source observable sequence are not delayed.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV17delaySubscription_9schedulerACyxq_GSd_AA13SchedulerType_ptF":{"name":"delaySubscription(_:scheduler:)","abstract":"<p>Time shifts the observable sequence by delaying the subscription with the specified relative time duration, using the specified scheduler to run timers.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9observeOnyACyxq_GAA22ImmediateSchedulerType_pF":{"name":"observeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV11subscribeOnyACyxq_GAA22ImmediateSchedulerType_pF":{"name":"subscribeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its subscription and unsubscription logic on the specified","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV10catchErroryACyxq_GAEs0F0_pKcF":{"name":"catchError(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5retryyACyxq_GSiF":{"name":"retry(_:)","abstract":"<p>If the initial subscription to the observable sequence emits an error event, try repeating it up to the specified number of attempts (inclusive of the initial attempt) or until is succeeds. For example, if you want to retry a sequence once upon failure, you should use retry(2) (once for the initial attempt, and once for the retry).</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9retryWhenyACyxq_Gqd__AA10ObservableCyqd_0_GcAA0G4TypeRd__s5ErrorRd_0_r0_lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9retryWhenyACyxq_Gqd__AA10ObservableCys5Error_pGcAA0G4TypeRd__lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5debug_10trimOutput4file4line8functionACyxq_GSSSg_SbSSSuSStF":{"name":"debug(_:trimOutput:file:line:function:)","abstract":"<p>Prints received events for all observers on standard output.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5using_09primitiveD7FactoryACyxq_Gqd__yKc_AFqd__KctAA10DisposableRd__lFZ":{"name":"using(_:primitiveSequenceFactory:)","abstract":"<p>Constructs an observable sequence that depends on a resource object, whose lifetime is tied to the resulting observable sequence&rsquo;s lifetime.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV7timeout_9schedulerACyxq_GSd_AA13SchedulerType_ptF":{"name":"timeout(_:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, a TimeoutError is propagated to the observer.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV7timeout_5other9schedulerACyxq_GSd_AgA13SchedulerType_ptF":{"name":"timeout(_:other:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence, using the specified scheduler to run timeout timers. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, the other observable sequence is used to produce future messages from that point on.</p>","parent_name":"PrimitiveSequence"},"RxSwift/Traits.html#/s:7RxSwift11Completablea":{"name":"Completable","abstract":"<p>Represents a push style sequence containing 0 elements.</p>"},"RxSwift/Traits.html#/s:7RxSwift5Maybea":{"name":"Maybe","abstract":"<p>Represents a push style sequence containing 0 or 1 element.</p>"},"Structs/PrimitiveSequence.html":{"name":"PrimitiveSequence","abstract":"<p>包含0或1个元素的可观察序列。</p>"},"RxSwift/Traits.html#/s:7RxSwift6Singlea":{"name":"Single","abstract":"<p>只能发出一个元素或者或者 error 事件。传入 complete 事件会导致报错(fatalError).</p>"},"Protocols/SubjectType.html#/s:7RxSwift11SubjectTypeP0c8ObserverD0Qa":{"name":"SubjectObserverType","abstract":"<p>观察者的类型</p>","parent_name":"SubjectType"},"Protocols/SubjectType.html#/s:7RxSwift11SubjectTypeP10asObserver0cfD0QzyF":{"name":"asObserver()","abstract":"<p>自身生成观察者对象</p>","parent_name":"SubjectType"},"Classes/ReplaySubject.html#/s:7RxSwift11SubjectTypeP0c8ObserverD0Qa":{"name":"SubjectObserverType","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC7disposeyyF":{"name":"dispose()","abstract":"<p>Unsubscribe all observers and release resources.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC6create10bufferSizeACyxGSi_tFZ":{"name":"create(bufferSize:)","abstract":"<p>Creates new instance of <code>ReplaySubject</code> that replays at most <code>bufferSize</code> last elements of sequence.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC15createUnboundedACyxGyFZ":{"name":"createUnbounded()","abstract":"<p>创建一个新的“ReplaySubject”实例，缓冲序列的所有元素。","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/deinit":{"name":"deinit","parent_name":"ReplaySubject"},"Classes/PublishSubject.html#/s:7RxSwift11SubjectTypeP0c8ObserverD0Qa":{"name":"SubjectObserverType","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC10isDisposedSbvp":{"name":"isDisposed","abstract":"<p>Indicates whether the subject has been isDisposed.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectCACyxGycfc":{"name":"init()","abstract":"<p>Creates a subject.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC9subscribeyAA10Disposable_pqd__1EQyd__RszAA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an observer to the subject.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC7disposeyyF":{"name":"dispose()","abstract":"<p>Unsubscribe all observers and release resources.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/deinit":{"name":"deinit","parent_name":"PublishSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift11SubjectTypeP0c8ObserverD0Qa":{"name":"SubjectObserverType","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>显示是否有任何观察者</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC10isDisposedSbvp":{"name":"isDisposed","abstract":"<p>资源是否已处理</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC5valueACyxGx_tcfc":{"name":"init(value:)","abstract":"<p>Initializes a new instance of the subject that caches its last value and starts with the specified value.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC5valuexyKF":{"name":"value()","abstract":"<p>Gets the current value or throws an error.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC9subscribeyAA10Disposable_pqd__1EQyd__RszAA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an observer to the subject.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC7disposeyyF":{"name":"dispose()","abstract":"<p>Unsubscribe all observers and release resources.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/deinit":{"name":"deinit","parent_name":"BehaviorSubject"},"Classes/AsyncSubject.html#/s:7RxSwift11SubjectTypeP0c8ObserverD0Qa":{"name":"SubjectObserverType","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectCACyxGycfc":{"name":"init()","abstract":"<p>Creates a subject.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC9subscribeyAA10Disposable_pqd__1EQyd__RszAA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an observer to the subject.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/deinit":{"name":"deinit","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html":{"name":"AsyncSubject","abstract":"<p>AsyncSubject只发送由源Observable发送的最后一个事件，并且只在源Observable完成之后。</p>"},"Classes/BehaviorSubject.html":{"name":"BehaviorSubject","abstract":"<p>表示随时间变化的值。</p>"},"Classes/PublishSubject.html":{"name":"PublishSubject","abstract":"<p>Represents an object that is both an observable sequence as well as an observer.</p>"},"Classes/ReplaySubject.html":{"name":"ReplaySubject","abstract":"<p>Represents an object that is both an observable sequence as well as an observer.</p>"},"Protocols/SubjectType.html":{"name":"SubjectType","abstract":"<p>表示既是 Observable 序列又是观察者对象</p>"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC0cD0a":{"name":"VirtualTime","abstract":"<p>Undocumented</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC0cD8Intervala":{"name":"VirtualTimeInterval","abstract":"<p>Undocumented</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC3now10Foundation4DateVvp":{"name":"now","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC5clock0cD4UnitQzvp":{"name":"clock","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC12initialClock9converterACyxG0cD4UnitQz_xtcfc":{"name":"init(initialClock:converter:)","abstract":"<p>Creates a new virtual time scheduler.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC8schedule_6actionAA10Disposable_pqd___AaF_pqd__ctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC16scheduleRelative_03dueD06actionAA10Disposable_pqd___SdAaG_pqd__ctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC016scheduleRelativeC0_03dueD06actionAA10Disposable_pqd___0cD12IntervalUnitQzAaG_pqd__ctlF":{"name":"scheduleRelativeVirtual(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed after relative time has passed.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC016scheduleAbsoluteC0_4time6actionAA10Disposable_pqd___0cD4UnitQzAaG_pqd__ctlF":{"name":"scheduleAbsoluteVirtual(_:time:action:)","abstract":"<p>Schedules an action to be executed at absolute virtual time.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC015adjustScheduledD0y0cD4UnitQzAFF":{"name":"adjustScheduledTime(_:)","abstract":"<p>Adjusts time of scheduling before adding item to schedule queue.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC5startyyF":{"name":"start()","abstract":"<p>Starts the virtual time scheduler.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC9advanceToyy0cD4UnitQzF":{"name":"advanceTo(_:)","abstract":"<p>Advances the scheduler&rsquo;s clock to the specified time, running all work till that point.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC5sleepyy0cD12IntervalUnitQzF":{"name":"sleep(_:)","abstract":"<p>Advances the scheduler&rsquo;s clock by the specified relative time.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC4stopyyF":{"name":"stop()","abstract":"<p>Stops the virtual time scheduler.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/deinit":{"name":"deinit","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A textual representation of <code>self</code>, suitable for debugging.</p>","parent_name":"VirtualTimeScheduler"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP0cD4UnitQa":{"name":"VirtualTimeUnit","abstract":"<p>Virtual time unit used that represents ticks of virtual clock.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP0cD12IntervalUnitQa":{"name":"VirtualTimeIntervalUnit","abstract":"<p>Virtual time unit used to represent differences of virtual times.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP011convertFromcD0y10Foundation4DateV0cD4UnitQzF":{"name":"convertFromVirtualTime(_:)","abstract":"<p>Converts virtual time to real time.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP09convertTocD0y0cD4UnitQz10Foundation4DateVF":{"name":"convertToVirtualTime(_:)","abstract":"<p>Converts real time to virtual time.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP011convertFromcD8IntervalySd0cdI4UnitQzF":{"name":"convertFromVirtualTimeInterval(_:)","abstract":"<p>Converts from virtual time interval to <code>NSTimeInterval</code>.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP09convertTocD8Intervaly0cdI4UnitQzSdF":{"name":"convertToVirtualTimeInterval(_:)","abstract":"<p>Converts from <code>NSTimeInterval</code> to virtual time interval.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP06offsetcD0_0G00cD4UnitQzAG_0cd8IntervalH0QztF":{"name":"offsetVirtualTime(_:offset:)","abstract":"<p>Offsets virtual time by virtual time interval.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP07comparecD0yAA0cD10ComparisonO0cD4UnitQz_AHtF":{"name":"compareVirtualTime(_:_:)","abstract":"<p>This is additional abstraction because <code>Date</code> is unfortunately not comparable.","parent_name":"VirtualTimeConverterType"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC12TimeIntervala":{"name":"TimeInterval","abstract":"<p>Undocumented</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC4Timea":{"name":"Time","abstract":"<p>Undocumented</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC3now10Foundation4DateVvp":{"name":"now","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC08internalcE4Name06serialE13Configuration6leewayACSS_ySo17OS_dispatch_queueCcSg0D00D12TimeIntervalOtcfc":{"name":"init(internalSerialQueueName:serialQueueConfiguration:leeway:)","abstract":"<p>Constructs new <code>SerialDispatchQueueScheduler</code> with internal serial queue named <code>internalSerialQueueName</code>.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC5queue08internalcE4Name6leewayACSo012OS_dispatch_G0C_SS0D00D12TimeIntervalOtcfc":{"name":"init(queue:internalSerialQueueName:leeway:)","abstract":"<p>Constructs new <code>SerialDispatchQueueScheduler</code> named <code>internalSerialQueueName</code> that wraps <code>queue</code>.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC3qos08internalcE4Name6leewayAC0D00D3QoSV_SSAG0D12TimeIntervalOtcfc":{"name":"init(qos:internalSerialQueueName:leeway:)","abstract":"<p>Constructs new <code>SerialDispatchQueueScheduler</code> that wraps on of the global concurrent dispatch queues.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC16scheduleRelative_7dueTime6actionAA10Disposable_px_SdAaG_pxctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC16schedulePeriodic_10startAfter6period6actionAA10Disposable_px_S2dxxctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC09operationD0So011NSOperationD0Cvp":{"name":"operationQueue","abstract":"<p>Undocumented</p>","parent_name":"OperationQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC13queuePrioritySo011NSOperationdG0Vvp":{"name":"queuePriority","abstract":"<p>Undocumented</p>","parent_name":"OperationQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC09operationD013queuePriorityACSo011NSOperationD0C_So0idH0Vtcfc":{"name":"init(operationQueue:queuePriority:)","abstract":"<p>Constructs new instance of <code>OperationQueueScheduler</code> that performs work on <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC09operationD0So011NSOperationD0Cvp\">operationQueue</a></code>.</p>","parent_name":"OperationQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed recursively.</p>","parent_name":"OperationQueueScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerCACycfc":{"name":"init()","abstract":"<p>根据 <code>DispatchQueue.main</code> 生成 <code>MainScheduler</code> 实例。</p>","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC8instanceACvpZ":{"name":"instance","abstract":"<p><code>MainScheduler</code> 单例</p>","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC13asyncInstanceAA019SerialDispatchQueueD0CvpZ":{"name":"asyncInstance","abstract":"<p><code>MainScheduler</code> 单例总是执行异步操作","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC017ensureExecutingOnD012errorMessageySSSg_tFZ":{"name":"ensureExecutingOnScheduler(errorMessage:)","abstract":"<p>判断是否在主线程运行，后台线程会抛出错误。</p>","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC015ensureRunningOnC6Thread12errorMessageySSSg_tFZ":{"name":"ensureRunningOnMainThread(errorMessage:)","abstract":"<p>判断是否在主线程运行，后台线程会抛出错误。</p>","parent_name":"MainScheduler"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV07VirtualE4Unita":{"name":"VirtualTimeUnit","abstract":"<p>Virtual time unit used that represents ticks of virtual clock.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV07VirtualE12IntervalUnita":{"name":"VirtualTimeIntervalUnit","abstract":"<p>Virtual time unit used to represent differences of virtual times.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV018convertFromVirtualE0y10Foundation4DateVAGF":{"name":"convertFromVirtualTime(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV016convertToVirtualE0y10Foundation4DateVAGF":{"name":"convertToVirtualTime(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV018convertFromVirtualE8IntervalyS2dF":{"name":"convertFromVirtualTimeInterval(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV016convertToVirtualE8IntervalyS2dF":{"name":"convertToVirtualTimeInterval(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV013offsetVirtualE0_0G010Foundation4DateVAH_SdtF":{"name":"offsetVirtualTime(_:offset:)","abstract":"<p>Offsets <code>Date</code> by time interval.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV014compareVirtualE0yAA0hE10ComparisonO10Foundation4DateV_AItF":{"name":"compareVirtualTime(_:_:)","abstract":"<p>Compares two <code>Date</code>s.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Classes/HistoricalScheduler.html#/s:7RxSwift19HistoricalSchedulerC12initialClockAC10Foundation4DateV_tcfc":{"name":"init(initialClock:)","abstract":"<p>Creates a new historical scheduler with initial clock value.</p>","parent_name":"HistoricalScheduler"},"Classes/CurrentThreadScheduler.html#/s:7RxSwift22CurrentThreadSchedulerC8instanceACvpZ":{"name":"instance","abstract":"<p>当前线程调度程序的单例实例。</p>","parent_name":"CurrentThreadScheduler"},"Classes/CurrentThreadScheduler.html#/s:7RxSwift22CurrentThreadSchedulerC18isScheduleRequiredSbvpZ":{"name":"isScheduleRequired","abstract":"<p>返回一个值，用来表示调用者是否必须调用 <code>schedule</code> 方法， 默认 YES</p>","parent_name":"CurrentThreadScheduler"},"Classes/CurrentThreadScheduler.html#/s:7RxSwift22CurrentThreadSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>调度要在当前线程上尽快执行的操作。</p>","parent_name":"CurrentThreadScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC12TimeIntervala":{"name":"TimeInterval","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC4Timea":{"name":"Time","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC3now10Foundation4DateVvp":{"name":"now","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC8instanceACvpZ":{"name":"instance","abstract":"<p>Singleton instance of <code>ConcurrentMainScheduler</code></p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC16scheduleRelative_7dueTime6actionAA10Disposable_px_SdAaG_pxctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC16schedulePeriodic_10startAfter6period6actionAA10Disposable_px_S2dxxctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC12TimeIntervala":{"name":"TimeInterval","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC4Timea":{"name":"Time","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift13SchedulerTypeP3now10Foundation4DateVvp":{"name":"now","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC5queue6leewayACSo012OS_dispatch_G0C_0D00D12TimeIntervalOtcfc":{"name":"init(queue:leeway:)","abstract":"<p>Constructs new <code>ConcurrentDispatchQueueScheduler</code> that wraps <code>queue</code>.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC3qos6leewayAC0D00D3QoSV_AF0D12TimeIntervalOtcfc":{"name":"init(qos:leeway:)","abstract":"<p>Convenience init for scheduler that wraps one of the global concurrent dispatch queues.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC16scheduleRelative_7dueTime6actionAA10Disposable_px_SdAaG_pxctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC16schedulePeriodic_10startAfter6period6actionAA10Disposable_px_S2dxxctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html":{"name":"ConcurrentDispatchQueueScheduler","abstract":"<p>Abstracts the work that needs to be performed on a specific <code>dispatch_queue_t</code>. You can also pass a serial dispatch queue, it shouldn&rsquo;t cause any problems.</p>"},"Classes/ConcurrentMainScheduler.html":{"name":"ConcurrentMainScheduler","abstract":"<p>Abstracts work that needs to be performed on <code>MainThread</code>. In case <code>schedule</code> methods are called from main thread, it will perform action immediately without scheduling.</p>"},"Classes/CurrentThreadScheduler.html":{"name":"CurrentThreadScheduler","abstract":"<p>它是一个串行调度器，表示当前执行工作的调度器。</p>"},"Classes/HistoricalScheduler.html":{"name":"HistoricalScheduler","abstract":"<p>Provides a virtual time scheduler that uses <code>Date</code> for absolute time and <code>NSTimeInterval</code> for relative time.</p>"},"Structs/HistoricalSchedulerTimeConverter.html":{"name":"HistoricalSchedulerTimeConverter","abstract":"<p>Converts historical virtual time into real time.</p>"},"Classes/MainScheduler.html":{"name":"MainScheduler","abstract":"<p>抽象需要在主队列运行的<code>DispatchQueue.main</code>的工作. 如果调度使用主队列<code>DispatchQueue.main</code>，则立即执行。</p>"},"Classes/OperationQueueScheduler.html":{"name":"OperationQueueScheduler","abstract":"<p>OperationQueueScheduler 抽象了 NSOperationQueue。</p>"},"Classes/SerialDispatchQueueScheduler.html":{"name":"SerialDispatchQueueScheduler","abstract":"<p>串行队列调度"},"Protocols/VirtualTimeConverterType.html":{"name":"VirtualTimeConverterType","abstract":"<p>Parametrization for virtual time used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/VirtualTimeScheduler.html\">VirtualTimeScheduler</a></code>s.</p>"},"Classes/VirtualTimeScheduler.html":{"name":"VirtualTimeScheduler","abstract":"<p>Base class for virtual time schedulers using a priority queue for scheduled items.</p>"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"SingleAssignmentDisposable"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>SingleAssignmentDisposable</code>.</p>","parent_name":"SingleAssignmentDisposable"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableC03setE0yyAA0E0_pF":{"name":"setDisposable(_:)","abstract":"<p>设置底层的 Disposable 对象</p>","parent_name":"SingleAssignmentDisposable"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>调用底层的 Disposable 资源处理，并释放底层 Disposable 对象。</p>","parent_name":"SingleAssignmentDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"SerialDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>SerialDisposable</code>.</p>","parent_name":"SerialDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableC10disposableAA0D0_pvp":{"name":"disposable","abstract":"<p>Gets or sets the underlying disposable.</p>","parent_name":"SerialDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the underlying disposable as well as all future replacements.</p>","parent_name":"SerialDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC9schedulerAA22ImmediateSchedulerType_pvp":{"name":"scheduler","abstract":"<p>Undocumented</p>","parent_name":"ScheduledDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"ScheduledDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC9scheduler10disposableAcA22ImmediateSchedulerType_p_AA0D0_ptcfc":{"name":"init(scheduler:disposable:)","abstract":"<p>Initializes a new instance of the <code>ScheduledDisposable</code> that uses a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC9schedulerAA22ImmediateSchedulerType_pvp\">scheduler</a></code> on which to dispose the <code>disposable</code>.</p>","parent_name":"ScheduledDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the wrapped disposable on the provided scheduler.</p>","parent_name":"ScheduledDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"RefCountDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC10disposableAcA0E0_p_tcfc":{"name":"init(disposable:)","abstract":"<p>Initializes a new instance of the <code>RefCountDisposable</code>.</p>","parent_name":"RefCountDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC6retainAA0E0_pyF":{"name":"retain()","abstract":"<p>Holds a dependent disposable that when disposed decreases the refcount on the underlying disposable.</p>","parent_name":"RefCountDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the underlying disposable only when all dependent disposables have been disposed.</p>","parent_name":"RefCountDisposable"},"Classes/DisposeBase.html#/s:7RxSwift11DisposeBaseCfd":{"name":"deinit","abstract":"<p>Undocumented</p>","parent_name":"DisposeBase"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagCACycfc":{"name":"init()","abstract":"<p>Constructs new empty dispose bag.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insertyyAA10Disposable_pF":{"name":"insert(_:)","abstract":"<p>Adds <code>disposable</code> to be disposed when dispose bag is being deinited.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagCfd":{"name":"deinit","abstract":"<p>Undocumented</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC9disposingAcA10Disposable_pd_tcfc":{"name":"init(disposing:)","abstract":"<p>Convenience init allows a list of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC9disposingACSayAA10Disposable_pG_tcfc":{"name":"init(disposing:)","abstract":"<p>Convenience init allows an array of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insertyyAA10Disposable_pd_tF":{"name":"insert(_:)","abstract":"<p>Convenience function allows a list of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insertyySayAA10Disposable_pGF":{"name":"insert(_:)","abstract":"<p>Convenience function allows an array of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6create4withAA10Cancelable_pyyc_tFZ":{"name":"create(with:)","abstract":"<p>Constructs a new disposable with the given action used for disposal.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pAA10Disposable_p_AaF_ptFZ":{"name":"create(_:_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pAA10Disposable_p_AaF_pAaF_ptFZ":{"name":"create(_:_:_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pAA10Disposable_p_AaF_pAaF_pAaF_pdtFZ":{"name":"create(_:_:_:_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pSayAA10Disposable_pGFZ":{"name":"create(_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createAA10Disposable_pyFZ":{"name":"create()","abstract":"<p>无操作的资源处理</p>","parent_name":"Disposables"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC10DisposeKeyV":{"name":"DisposeKey","abstract":"<p>Key used to remove disposable from composite disposable</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift10CancelableP10isDisposedSbvp":{"name":"isDisposed","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCyAcA0D0_p_AaD_ptcfc":{"name":"init(_:_:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCyAcA0D0_p_AaD_pAaD_ptcfc":{"name":"init(_:_:_:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCyAcA0D0_p_AaD_pAaD_pAaD_pAaD_pdtcfc":{"name":"init(_:_:_:_:_:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC11disposablesACSayAA0D0_pG_tcfc":{"name":"init(disposables:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC6insertyAC10DisposeKeyVSgAA0D0_pF":{"name":"insert(_:)","abstract":"<p>Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC5countSivp":{"name":"count","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC6remove3foryAC10DisposeKeyV_tF":{"name":"remove(for:)","abstract":"<p>Removes and disposes the disposable identified by <code>disposeKey</code> from the CompositeDisposable.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes all disposables in the group and removes them from the group.</p>","parent_name":"CompositeDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>BooleanDisposable</code> class</p>","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC10isDisposedACSb_tcfc":{"name":"init(isDisposed:)","abstract":"<p>Initializes a new instance of the <code>BooleanDisposable</code> class with given value</p>","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Sets the status to disposed, which can be observer through the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC10isDisposedSbvp\">isDisposed</a></code> property.</p>","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html":{"name":"BooleanDisposable","abstract":"<p>Represents a disposable resource that can be checked for disposal status.</p>"},"Classes/CompositeDisposable.html":{"name":"CompositeDisposable","abstract":"<p>表示一起处理的一组 Disposable。</p>"},"Structs/Disposables.html":{"name":"Disposables","abstract":"<p>资源管理方法集合</p>"},"Classes/DisposeBag.html":{"name":"DisposeBag","abstract":"<p>Thread safe bag that disposes added disposables on <code>deinit</code>.</p>"},"Classes/DisposeBase.html":{"name":"DisposeBase","abstract":"<p>资源处理的基类</p>"},"Classes/RefCountDisposable.html":{"name":"RefCountDisposable","abstract":"<p>Represents a disposable resource that only disposes its underlying disposable resource when all dependent disposable objects have been disposed.</p>"},"Classes/ScheduledDisposable.html":{"name":"ScheduledDisposable","abstract":"<p>Represents a disposable resource whose disposal invocation will be scheduled on the specified scheduler.</p>"},"Classes/SerialDisposable.html":{"name":"SerialDisposable","abstract":"<p>Represents a disposable resource whose underlying disposable resource can be replaced by another disposable resource, causing automatic disposal of the previous underlying disposable resource.</p>"},"Classes/SingleAssignmentDisposable.html":{"name":"SingleAssignmentDisposable","abstract":"<p>表示一个 disposable 实例，只允许对其底层的 disposable 资源处理一次，如果其底层 disposable 资源已存在，再次设置会报错。</p>"},"Protocols/SchedulerType.html#/s:7RxSwift13SchedulerTypeP3now10Foundation4DateVvp":{"name":"now","abstract":"<p>当前时间</p>","parent_name":"SchedulerType"},"Protocols/SchedulerType.html#/s:7RxSwift13SchedulerTypeP16scheduleRelative_7dueTime6actionAA10Disposable_pqd___SdAaG_pqd__ctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"SchedulerType"},"Protocols/SchedulerType.html#/s:7RxSwift13SchedulerTypeP16schedulePeriodic_10startAfter6period6actionAA10Disposable_pqd___S2dqd__qd__ctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"SchedulerType"},"Structs/Reactive.html#/s:7RxSwift8ReactiveV4basexvp":{"name":"base","abstract":"<p>要扩展的基本对象。</p>","parent_name":"Reactive"},"Structs/Reactive.html#/s:7RxSwift8ReactiveVyACyxGxcfc":{"name":"init(_:)","abstract":"<p>使用对象创建扩展</p>","parent_name":"Reactive"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypeP1EQa":{"name":"E","abstract":"<p>观察者可以订阅序列的元素类型</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypeP2onyyAA5EventOy1EQzGF":{"name":"on(_:)","abstract":"<p>将 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> 序列事件通知观察者</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE02asC0AA03AnyC0Vy1EQzGyF":{"name":"asObserver()","abstract":"<p>可擦除类型观察者转化为 AnyObserver 类型</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE03mapC0yAA03AnyC0Vyqd__G1EQzqd__KclF":{"name":"mapObserver(_:)","abstract":"<p>使用自定义转换方法将R类型的观察者转换为E类型。每个发送到结果观察者的事件都被转换并发送到“self”。</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE6onNextyy1EQzF":{"name":"onNext(_:)","abstract":"<p>Convenience method equivalent to <code>on(.next(element: E))</code></p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE11onCompletedyyF":{"name":"onCompleted()","abstract":"<p>Convenience method equivalent to <code>on(.completed)</code></p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE7onErroryys0F0_pF":{"name":"onError(_:)","abstract":"<p>Convenience method equivalent to <code>on(.error(Swift.Error))</code></p>","parent_name":"ObserverType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypeP9subscribeyAA10Disposable_pqd__AA08ObserverD0Rd__1EQyd__AGRtzlF":{"name":"subscribe(_:)","abstract":"<p>传入观察者，接收序列的消息</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE12mapWithIndexyAA0C0Cyqd__Gqd__1EQz_SitKclF":{"name":"mapWithIndex(_:)","abstract":"<p>Projects each element of an observable sequence into a new form by incorporating the element&rsquo;s index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE16flatMapWithIndexyAA0C0Cy1EQyd__Gqd__AGQz_SitKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMapWithIndex(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence by incorporating the element&rsquo;s index and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE18skipWhileWithIndexyAA0C0Cy1EQzGSbAH_SitKcF":{"name":"skipWhileWithIndex(_:)","abstract":"<p>Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE18takeWhileWithIndexyAA0C0Cy1EQzGSbAH_SitKcF":{"name":"takeWhileWithIndex(_:)","abstract":"<p>Returns elements from an observable sequence as long as a specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE31shareReplayLatestWhileConnectedAA0C0Cy1EQzGyF":{"name":"shareReplayLatestWhileConnected()","abstract":"<p>Returns an observable sequence that shares a single subscription to the underlying sequence, and immediately upon subscription replays latest element in buffer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE11shareReplayyAA0C0Cy1EQzGSiF":{"name":"shareReplay(_:)","abstract":"<p>Returns an observable sequence that shares a single subscription to the underlying sequence, and immediately upon subscription replays maximum number of elements in buffer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9subscribe6onNext0F5Error0F9Completed0F8DisposedAA10Disposable_py1EQzcSg_ys0H0_pcSgyycSgAOtF":{"name":"subscribe(onNext:onError:onCompleted:onDisposed:)","abstract":"<p>订阅next、error、conplete 和已处理处理程序到可观察序列。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE02asC0AA0C0Cy1EQzGyF":{"name":"asObservable()","abstract":"<p>默认实现：将遵循 <code>ObservableType</code> 协议的对象转化为 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> 对象.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3ambyAA0C0Cy1EQzGqd__STRd__AI7ElementRtd__lFZ":{"name":"amb(_:)","abstract":"<p>Propagates the observable sequence that reacts first.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3ambyAA0C0Cy1EQzGqd__AaBRd__AGQyd__AHRSlF":{"name":"amb(_:)","abstract":"<p>Propagates the observable sequence that reacts first.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6buffer8timeSpan5count9schedulerAA0C0CySay1EQzGGSd_SiAA09SchedulerD0_ptF":{"name":"buffer(timeSpan:count:scheduler:)","abstract":"<p>Projects each element of an observable sequence into a buffer that&rsquo;s sent out when either it&rsquo;s full or a given amount of time has elapsed, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10catchErroryAA0C0Cy1EQzGAIs0F0_pKcF":{"name":"catchError(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20catchErrorJustReturnyAA0C0Cy1EQzGAHF":{"name":"catchErrorJustReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10catchErroryAA0C0Cy1EQzGqd__STRd__AI7ElementRtd__lFZ":{"name":"catchError(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the next observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5retryAA0C0Cy1EQzGyF":{"name":"retry()","abstract":"<p>Repeats the source observable sequence until it successfully terminates.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5retryyAA0C0Cy1EQzGSiF":{"name":"retry(_:)","abstract":"<p>Repeats the source observable sequence the specified number of times in case of an error or until it successfully terminates.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatestyAA0C0Cy1EQzGqd___AHSay7Element_AGQYd__GKctSlRd__AabJRpd__lFZ":{"name":"combineLatest(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatestyAA0C0CySay1EQzGGqd__SlRd__7Element_AGQYd__AHRSAabKRpd__lFZ":{"name":"combineLatest(_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest__14resultSelectorAA0C0Cy1EQzGqd___qd_0_AiHQyd___AHQyd_0_tKctAaBRd__AaBRd_0_r0_lFZ":{"name":"combineLatest(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_tGqd___qd_0_tAaBRd__AaBRd_0_r0_lFZ":{"name":"combineLatest(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest___14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_AiHQyd___AHQyd_0_AHQyd_1_tKctAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"combineLatest(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_tGqd___qd_0_qd_1_tAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"combineLatest(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest____14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"combineLatest(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_tGqd___qd_0_qd_1_qd_2_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"combineLatest(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest_____14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"combineLatest(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_tGqd___qd_0_qd_1_qd_2_qd_3_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"combineLatest(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest______14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"combineLatest(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"combineLatest(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest_______14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest________14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_AHQyd_6_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_ADQyd_6_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy1EQzGqd__AA0c11ConvertibleD0Rd__AGQyd__AHRSlF":{"name":"concat(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy1EQzGqd__STRd__AI7ElementRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy1EQzGqd__SlRd__AI7ElementRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given collection, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy1EQzGAId_tFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given collection, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6createyAA0C0Cy1EQzGAA10Disposable_pAA11AnyObserverVyAHGcFZ":{"name":"create(_:)","abstract":"<p>通过指定的订阅方法创建 Observable 序列。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8debounce_9schedulerAA0C0Cy1EQzGSd_AA09SchedulerD0_ptF":{"name":"debounce(_:scheduler:)","abstract":"<p>Ignores elements from an observable sequence which are followed by another element within a specified relative time duration, using the specified scheduler to run throttling timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5debug_10trimOutput4file4line8functionAA0C0Cy1EQzGSSSg_SbSSSuSStF":{"name":"debug(_:trimOutput:file:line:function:)","abstract":"<p>Prints received events for all observers on standard output.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7ifEmpty7defaultAA0C0Cy1EQzGAI_tF":{"name":"ifEmpty(default:)","abstract":"<p>Emits elements from the source observable sequence, or a default element if the source observable sequence is empty.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8deferredyAA0C0Cy1EQzGAIyKcFZ":{"name":"deferred(_:)","abstract":"<p>在观察者订阅之前不创建 Observable 序列，为每个观察者单独创建一个新的 Observable 序列</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5delay_9schedulerAA0C0Cy1EQzGSd_AA09SchedulerD0_ptF":{"name":"delay(_:scheduler:)","abstract":"<p>Returns an observable sequence by the source observable sequence shifted forward in time by a specified delay. Error events from the source observable sequence are not delayed.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE17delaySubscription_9schedulerAA0C0Cy1EQzGSd_AA09SchedulerD0_ptF":{"name":"delaySubscription(_:scheduler:)","abstract":"<p>Time shifts the observable sequence by delaying the subscription with the specified relative time duration, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A16EventConvertible1ERpzrlE13dematerializeAA0C0CyAE_07ElementD0QZGyF":{"name":"dematerialize()","abstract":"<p>操作符：将 materialize 生成事件元素转换为普通元素</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAASQ1ERpzrlE20distinctUntilChangedAA0C0CyAEGyF":{"name":"distinctUntilChanged()","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to equality operator.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChangedyAA0C0Cy1EQzGqd__AHKcSQRd__lF":{"name":"distinctUntilChanged(_:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the <code>keySelector</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChangedyAA0C0Cy1EQzGSbAH_AHtKcF":{"name":"distinctUntilChanged(_:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the <code>comparer</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChanged_8comparerAA0C0Cy1EQzGqd__AIKc_Sbqd___qd__tKctlF":{"name":"distinctUntilChanged(_:comparer:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the keySelector and the comparer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE2do6onNext0F5Error0F9Completed0F9Subscribe0F10Subscribed0F7DisposeAA0C0Cy1EQzGyANKcSg_ys0H0_pKcSgyyKcSgyycSgA2TtF":{"name":"do(onNext:onError:onCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9elementAtyAA0C0Cy1EQzGSiF":{"name":"elementAt(_:)","abstract":"<p>Returns a sequence emitting only element <em>n</em> emitted by an Observable</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5emptyAA0C0Cy1EQzGyFZ":{"name":"empty()","abstract":"<p>Returns an empty observable sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10enumeratedAA0C0CySi5index_1EQz7elementtGyF":{"name":"enumerated()","abstract":"<p>Enumerates the elements of an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5erroryAA0C0Cy1EQzGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6filteryAA0C0Cy1EQzGSbAHKcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14ignoreElementsAA17PrimitiveSequenceVyAA16CompletableTraitOs5NeverOGyF":{"name":"ignoreElements()","abstract":"<p>Skips elements and completes (or errors) when the observable sequence completes (or errors). Equivalent to filter that always returns false.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8generate12initialState9condition9scheduler7iterateAA0C0Cy1EQzGAL_SbALKcAA018ImmediateSchedulerD0_pA2LKctFZ":{"name":"generate(initialState:condition:scheduler:iterate:)","abstract":"<p>通过指定方法生成元素，当元素不符合预设调制时 <code>complete</code>。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7groupBy11keySelectorAA0C0CyAA07GroupedC0Vyqd__1EQzGGqd__AKKc_tSHRd__lF":{"name":"groupBy(keySelector:)","abstract":"<p>groupBy 操作符将源 Observable 分解为多个子 Observable，然后将这些子 Observable 发送出来。","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4justyAA0C0Cy1EQzGAHFZ":{"name":"just(_:)","abstract":"<p>返回包含单个元素的 Observable 序列。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4just_9schedulerAA0C0Cy1EQzGAI_AA018ImmediateSchedulerD0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3mapyAA0C0Cyqd__Gqd__1EQzKclF":{"name":"map(_:)","abstract":"<p>将 Observable 序列的每个元素进行转换。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE11materializeAA0C0CyAA5EventOy1EQzGGyF":{"name":"materialize()","abstract":"<p>操作符：可以将序列产生的事件，转换成元素。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7flatMapyAA0C0Cy1EQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMap(_:)","abstract":"<p>将一个可观察序列的每个元素投射到一个可观察序列中，并将得到的可观察序列合并成一个可观察序列。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE12flatMapFirstyAA0C0Cy1EQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMapFirst(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD01ERpzrlE5mergeAA0C0CyAE_AEQZGyF":{"name":"merge()","abstract":"<p>Merges elements from all observable sequences in the given enumerable sequence into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD01ERpzrlE5merge13maxConcurrentAA0C0CyAE_AEQZGSi_tF":{"name":"merge(maxConcurrent:)","abstract":"<p>Merges elements from all inner observable sequences into a single observable sequence, limiting the number of concurrent subscriptions to inner sequences.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD01ERpzrlE6concatAA0C0CyAE_AEQZGyF":{"name":"concat()","abstract":"<p>Concatenates all inner observable sequences, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5mergeyAA0C0Cy1EQzGqd__SlRd__AI7ElementRtd__lFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from collection into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5mergeyAA0C0Cy1EQzGSayAIGFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from array into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5mergeyAA0C0Cy1EQzGAId_tFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9concatMapyAA0C0Cy1EQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"concatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and concatenates the resulting observable sequences into one observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9multicast_8selectorAA0C0Cyqd_0_Gqd__yKc_AhGy1EQyd__GKctAA07SubjectD0Rd__0g8ObserverD0_AIQYd__AIRtzr0_lF":{"name":"multicast(_:selector:)","abstract":"<p>Multicasts the source sequence notifications through an instantiated subject into all uses of the sequence within a selector function.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7publishAA011ConnectableC0Cy1EQzGyF":{"name":"publish()","abstract":"<p>返回一个可连接的可观察序列，对观察者共享同一个订阅源</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6replayyAA011ConnectableC0Cy1EQzGSiF":{"name":"replay(_:)","abstract":"<p>返回一个可连接的可观察序列，对观察者共享同一个序列源和缓存</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9replayAllAA011ConnectableC0Cy1EQzGyF":{"name":"replayAll()","abstract":"<p>Returns a connectable observable sequence that shares a single subscription to the underlying sequence replaying all elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9multicastyAA011ConnectableC0Cy1EQyd__Gqd__AA07SubjectD0Rd__0g8ObserverD0_AGQYd__AGRtzlF":{"name":"multicast(_:)","abstract":"<p>multicast 方法将一个正常的序列转换成一个可连接的序列。","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9multicast11makeSubjectAA011ConnectableC0Cy1EQyd__Gqd__yc_tAA0gD0Rd__0g8ObserverD0_AHQYd__AHRtzlF":{"name":"multicast(makeSubject:)","abstract":"<p>multicast 方法将一个正常的序列转换成一个可连接的序列。","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5neverAA0C0Cy1EQzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9observeOnyAA0C0Cy1EQzGAA018ImmediateSchedulerD0_pF":{"name":"observeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from8optionalAA0C0Cy1EQzGAISg_tFZ":{"name":"from(optional:)","abstract":"<p>Converts a optional to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from8optional9schedulerAA0C0Cy1EQzGAJSg_AA018ImmediateSchedulerD0_ptFZ":{"name":"from(optional:scheduler:)","abstract":"<p>Converts a optional to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs17FixedWidthInteger1ERpzrlE5range5start5count9schedulerAA0C0CyAFGAF_AfA018ImmediateSchedulerD0_ptFZ":{"name":"range(start:count:scheduler:)","abstract":"<p>该方法通过指定起始和结束数值，创建一个以这个范围内所有值作为初始值的 Observable 序列。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6reduce_11accumulator9mapResultAA0C0Cyqd_0_Gqd___qd__qd___1EQztKcqd_0_qd__Kctr0_lF":{"name":"reduce(_:accumulator:mapResult:)","abstract":"<p>Applies an <code>accumulator</code> function over an observable sequence, returning the result of the aggregation as a single element in the result sequence. The specified <code>seed</code> value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6reduce_11accumulatorAA0C0Cyqd__Gqd___qd__qd___1EQztKctlF":{"name":"reduce(_:accumulator:)","abstract":"<p>Applies an <code>accumulator</code> function over an observable sequence, returning the result of the aggregation as a single element in the result sequence. The specified <code>seed</code> value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13repeatElement_9schedulerAA0C0Cy1EQzGAI_AA018ImmediateSchedulerD0_ptFZ":{"name":"repeatElement(_:scheduler:)","abstract":"<p>该方法创建一个可以无限发出给定元素的 Event 的 Observable 序列（永不终止）。 </p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9retryWhenyAA0C0Cy1EQzGqd__AFyqd_0_GcAaBRd__s5ErrorRd_0_r0_lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9retryWhenyAA0C0Cy1EQzGqd__AFys5Error_pGcAaBRd__lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6sampleyAA0C0Cy1EQzGqd__AaBRd__lF":{"name":"sample(_:)","abstract":"<p>Samples the source observable sequence using a sampler observable sequence producing sampling ticks.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4scan4into11accumulatorAA0C0Cyqd__Gqd___yqd__z_1EQztKctlF":{"name":"scan(into:accumulator:)","abstract":"<p>Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4scan_11accumulatorAA0C0Cyqd__Gqd___qd__qd___1EQztKctlF":{"name":"scan(_:accumulator:)","abstract":"<p>Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE2of_9schedulerAA0C0Cy1EQzGAId_AA018ImmediateSchedulerD0_ptFZ":{"name":"of(_:scheduler:)","abstract":"<p>通过同一类型的可变数量的参数生成 Observable 序列</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from_9schedulerAA0C0Cy1EQzGSayAIG_AA018ImmediateSchedulerD0_ptFZ":{"name":"from(_:scheduler:)","abstract":"<p>数组转化为 Observable 序列</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from_9schedulerAA0C0Cy1EQzGqd___AA018ImmediateSchedulerD0_ptSTRd__7ElementQyd__AIRSlFZ":{"name":"from(_:scheduler:)","abstract":"<p>序列转为是 Observable 序列</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5share6replay5scopeAA0C0Cy1EQzGSi_AA20SubjectLifetimeScopeOtF":{"name":"share(replay:scope:)","abstract":"<p>Returns an observable sequence that <strong>shares a single subscription to the underlying sequence</strong>, and immediately upon subscription replays  elements in buffer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6singleAA0C0Cy1EQzGyF":{"name":"single()","abstract":"<p>The single operator is similar to first, but throws a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO10noElementsyA2CmF\">RxError.noElements</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF\">RxError.moreThanOneElement</a></code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6singleyAA0C0Cy1EQzGSbAHKcF":{"name":"single(_:)","abstract":"<p>The single operator is similar to first, but throws a <code>RxError.NoElements</code> or <code>RxError.MoreThanOneElement</code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4skipyAA0C0Cy1EQzGSiF":{"name":"skip(_:)","abstract":"<p>Bypasses a specified number of elements in an observable sequence and then returns the remaining elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4skip_9schedulerAA0C0Cy1EQzGSd_AA09SchedulerD0_ptF":{"name":"skip(_:scheduler:)","abstract":"<p>Skips elements for the specified duration from the start of the observable source sequence, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9skipUntilyAA0C0Cy1EQzGqd__AaBRd__lF":{"name":"skipUntil(_:)","abstract":"<p>Returns the elements from the source observable sequence that are emitted after the other observable sequence produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9skipWhileyAA0C0Cy1EQzGSbAHKcF":{"name":"skipWhile(_:)","abstract":"<p>Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9startWithyAA0C0Cy1EQzGAHd_tF":{"name":"startWith(_:)","abstract":"<p>将一个值序列加到一个 Observable 序列的前面</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE11subscribeOnyAA0C0Cy1EQzGAA018ImmediateSchedulerD0_pF":{"name":"subscribeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its subscription and unsubscription logic on the specified","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13flatMapLatestyAA0C0Cy1EQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMapLatest(_:)","abstract":"<p>Projects each element of an observable sequence into a new sequence of observable sequences and then","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD01ERpzrlE12switchLatestAA0C0CyAE_AEQZGyF":{"name":"switchLatest()","abstract":"<p>Transforms an observable sequence of observable sequences into an observable sequence","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7ifEmpty8switchToAA0C0Cy1EQzGAJ_tF":{"name":"ifEmpty(switchTo:)","abstract":"<p>Returns the elements of the specified sequence or <code>switchTo</code> sequence if the sequence is empty.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4takeyAA0C0Cy1EQzGSiF":{"name":"take(_:)","abstract":"<p>Returns a specified number of contiguous elements from the start of an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4take_9schedulerAA0C0Cy1EQzGSd_AA09SchedulerD0_ptF":{"name":"take(_:scheduler:)","abstract":"<p>Takes elements for the specified duration from the start of the observable source sequence, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8takeLastyAA0C0Cy1EQzGSiF":{"name":"takeLast(_:)","abstract":"<p>Returns a specified number of contiguous elements from the end of an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9takeUntilyAA0C0Cy1EQzGqd__AaBRd__lF":{"name":"takeUntil(_:)","abstract":"<p>Returns the elements from the source observable sequence until the other observable sequence produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9takeUntil_9predicateAA0C0Cy1EQzGAA04TakeF8BehaviorO_SbAIKctF":{"name":"takeUntil(_:predicate:)","abstract":"<p>Returns elements from an observable sequence until the specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9takeWhileyAA0C0Cy1EQzGSbAHKcF":{"name":"takeWhile(_:)","abstract":"<p>Returns elements from an observable sequence as long as a specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8throttle_6latest9schedulerAA0C0Cy1EQzGSd_SbAA09SchedulerD0_ptF":{"name":"throttle(_:latest:scheduler:)","abstract":"<p>Returns an Observable that emits the first and the latest item emitted by the source Observable during sequential time windows of a specified duration.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7timeout_9schedulerAA0C0Cy1EQzGSd_AA09SchedulerD0_ptF":{"name":"timeout(_:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, a TimeoutError is propagated to the observer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7timeout_5other9schedulerAA0C0Cy1EQzGSd_qd__AA09SchedulerD0_ptAA0c11ConvertibleD0Rd__AIQyd__AJRSlF":{"name":"timeout(_:other:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence, using the specified scheduler to run timeout timers. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, the other observable sequence is used to produce future messages from that point on.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs17FixedWidthInteger1ERpzrlE8interval_9schedulerAA0C0CyAFGSd_AA09SchedulerD0_ptFZ":{"name":"interval(_:scheduler:)","abstract":"<p>创建 Observable 序列每隔一段设定的时间，会发出一个索引数的元素。</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs17FixedWidthInteger1ERpzrlE5timer_6period9schedulerAA0C0CyAFGSd_SdSgAA09SchedulerD0_ptFZ":{"name":"timer(_:period:scheduler:)","abstract":"<p>创建 Observable 序列每隔一段设定的时间，会发出一个索引数的元素，可以设置初次执行的时间</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7toArrayAA0C0CySay1EQzGGyF":{"name":"toArray()","abstract":"<p>Converts an Observable into another Observable that emits the whole sequence as a single array and then terminates.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5using_17observableFactoryAA0C0Cy1EQzGqd__yKc_AJqd__KctAA10DisposableRd__lFZ":{"name":"using(_:observableFactory:)","abstract":"<p>Constructs an observable sequence that depends on a resource object, whose lifetime is tied to the resulting observable sequence&rsquo;s lifetime.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6window8timeSpan5count9schedulerAA0C0CyAIy1EQzGGSd_SiAA09SchedulerD0_ptF":{"name":"window(timeSpan:count:scheduler:)","abstract":"<p>Projects each element of an observable sequence into a window that is completed when either it’s full or a given amount of time has elapsed.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14withLatestFrom_14resultSelectorAA0C0Cyqd_0_Gqd___qd_0_1EQz_AIQyd__tKctAA0c11ConvertibleD0Rd__r0_lF":{"name":"withLatestFrom(_:resultSelector:)","abstract":"<p>Merges two observable sequences into one observable sequence by combining each element from self with the latest element from the second source, if any.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14withLatestFromyAA0C0Cy1EQyd__Gqd__AA0c11ConvertibleD0Rd__lF":{"name":"withLatestFrom(_:)","abstract":"<p>Merges two observable sequences into one observable sequence by using latest element from the second sequence every time when <code>self</code> emits an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zipyAA0C0Cy1EQzGqd___AHSay7Element_AGQYd__GKctSlRd__AabJRpd__lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zipyAA0C0CySay1EQzGGqd__SlRd__7Element_AGQYd__AHRSAabKRpd__lFZ":{"name":"zip(_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip__14resultSelectorAA0C0Cy1EQzGqd___qd_0_AiHQyd___AHQyd_0_tKctAaBRd__AaBRd_0_r0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_tGqd___qd_0_tAaBRd__AaBRd_0_r0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip___14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_AiHQyd___AHQyd_0_AHQyd_1_tKctAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_tGqd___qd_0_qd_1_tAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"zip(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip____14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_tGqd___qd_0_qd_1_qd_2_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"zip(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip_____14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_tGqd___qd_0_qd_1_qd_2_qd_3_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"zip(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip______14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"zip(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip_______14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"zip(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip________14resultSelectorAA0C0Cy1EQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_AHQyd_6_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp1ERtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_ADQyd_6_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8asSingleAA17PrimitiveSequenceVyAA0F5TraitO1EQzGyF":{"name":"asSingle()","abstract":"<p>The <code>asSingle</code> operator throws a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO10noElementsyA2CmF\">RxError.noElements</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF\">RxError.moreThanOneElement</a></code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5firstAA17PrimitiveSequenceVyAA11SingleTraitO1EQzSgGyF":{"name":"first()","abstract":"<p>The <code>first</code> operator emits only the very first item emitted by this Observable,","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7asMaybeAA17PrimitiveSequenceVyAA0F5TraitO1EQzGyF":{"name":"asMaybe()","abstract":"<p>The <code>asMaybe</code> operator throws a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF\">RxError.moreThanOneElement</a></code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs5NeverO1ERtzrlE13asCompletableAA17PrimitiveSequenceVyAA0G5TraitOAEGyF":{"name":"asCompletable()","parent_name":"ObservableType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypeP1EQa":{"name":"E","abstract":"<p>序列中元素的类型。</p>","parent_name":"ObservableConvertibleType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypeP02asC0AA0C0Cy1EQzGyF":{"name":"asObservable()","abstract":"<p>转为为 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> 序列.</p>","parent_name":"ObservableConvertibleType"},"Classes/Observable.html#/s:7RxSwift10ObservableC1Ea":{"name":"E","abstract":"<p>序列中元素的类型。</p>","parent_name":"Observable"},"Classes/Observable.html#/s:7RxSwift14ObservableTypeP9subscribeyAA10Disposable_pqd__AA08ObserverD0Rd__1EQyd__AGRtzlF":{"name":"subscribe(_:)","parent_name":"Observable"},"Classes/Observable.html#/s:7RxSwift25ObservableConvertibleTypeP02asC0AA0C0Cy1EQzGyF":{"name":"asObservable()","parent_name":"Observable"},"Classes/Observable.html#/s:7RxSwift10ObservableCfd":{"name":"deinit","abstract":"<p>Undocumented</p>","parent_name":"Observable"},"Classes/Observable.html#/s:7RxSwift10ObservableC4fromyACyxGxSgFZ":{"name":"from(_:)","abstract":"<p>Converts a optional to an observable sequence.</p>","parent_name":"Observable"},"Classes/Observable.html#/s:7RxSwift10ObservableC4from_9schedulerACyxGxSg_AA22ImmediateSchedulerType_ptFZ":{"name":"from(_:scheduler:)","abstract":"<p>Converts a optional to an observable sequence.</p>","parent_name":"Observable"},"Protocols/ImmediateSchedulerType.html#/s:7RxSwift22ImmediateSchedulerTypeP8schedule_6actionAA10Disposable_pqd___AaF_pqd__ctlF":{"name":"schedule(_:action:)","abstract":"<p>立即执行 action 事件</p>","parent_name":"ImmediateSchedulerType"},"Protocols/ImmediateSchedulerType.html#/s:7RxSwift22ImmediateSchedulerTypePAAE17scheduleRecursive_6actionAA10Disposable_pqd___yqd___yqd__XEtctlF":{"name":"scheduleRecursive(_:action:)","abstract":"<p>调度递归执行的操作</p>","parent_name":"ImmediateSchedulerType"},"Structs/GroupedObservable.html#/s:7RxSwift25ObservableConvertibleTypeP1EQa":{"name":"E","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV3keyxvp":{"name":"key","abstract":"<p>Gets the common key.</p>","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV3key6sourceACyxq_Gx_AA0D0Cyq_Gtcfc":{"name":"init(key:source:)","abstract":"<p>Initializes grouped observable sequence with key and source observable sequence.</p>","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV9subscribeyAA10Disposable_pqd__1EQyd__Rs_AA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV02asD0AA0D0Cyq_GyF":{"name":"asObservable()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> sequence.</p>","parent_name":"GroupedObservable"},"Enums/Event.html#/s:7RxSwift5EventO4nextyACyxGxcAEmlF":{"name":"next(_:)","abstract":"<p>生成下一个元素。</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO5erroryACyxGs5Error_pcAEmlF":{"name":"error(_:)","abstract":"<p>序列错误结束。</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO9completedyACyxGAEmlF":{"name":"completed","abstract":"<p>序列正常结束。</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>对事件的描述。</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO06isStopC0Sbvp":{"name":"isStopEvent","abstract":"<p>是否为 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO9completedyACyxGAEmlF\">completed</a></code> 或者 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO5errors5Error_pSgvp\">error</a></code> 事件.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO7elementxSgvp":{"name":"element","abstract":"<p>如果是 <code>next</code> 事件, 返回元素值 否则返回 nil.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO5errors5Error_pSgvp":{"name":"error","abstract":"<p>如果是 <code>error</code> 事件, 返回 error 否则返回 nil.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO11isCompletedSbvp":{"name":"isCompleted","abstract":"<p>如果是 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO9completedyACyxGAEmlF\">completed</a></code> 事件, 返回 <code>true</code>.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO3mapyACyqd__Gqd__xKXElF":{"name":"map(_:)","abstract":"<p>遍历转换序列的值. 如果转换过程中发生错误，返回 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO5errors5Error_pSgvp\">.error</a></code>。","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO5eventACyxGvp":{"name":"event","abstract":"<p>此实例的事件表示形式</p>","parent_name":"Event"},"Protocols/Disposable.html#/s:7RxSwift10DisposableP7disposeyyF":{"name":"dispose()","abstract":"<p>处理方法(释放资源，取消任务。。。)。</p>","parent_name":"Disposable"},"Protocols/Disposable.html#/s:7RxSwift10DisposablePAAE03addC2ToyyAA10DisposeBagCF":{"name":"addDisposableTo(_:)","abstract":"<p>Deprecated in favor of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Disposable.html#/s:7RxSwift10DisposablePAAE8disposed2byyAA10DisposeBagC_tF\">disposed(by:)</a></code></p>","parent_name":"Disposable"},"Protocols/Disposable.html#/s:7RxSwift10DisposablePAAE8disposed2byyAA10DisposeBagC_tF":{"name":"disposed(by:)","abstract":"<p>把 <code>self</code> (Disposable)  添加到 <code>bag</code> 中</p>","parent_name":"Disposable"},"Protocols/ConnectableObservableType.html#/s:7RxSwift25ConnectableObservableTypeP7connectAA10Disposable_pyF":{"name":"connect()","abstract":"<p>Connects the observable wrapper to its source. All subscribed observers will receive values from the underlying observable sequence as long as the connection is established.</p>","parent_name":"ConnectableObservableType"},"Protocols/ConnectableObservableType.html#/s:7RxSwift25ConnectableObservableTypePAAE8refCountAA0D0Cy1EQzGyF":{"name":"refCount()","abstract":"<p>Returns an observable sequence that stays connected to the source as long as there is at least one subscription to the observable sequence.</p>","parent_name":"ConnectableObservableType"},"Protocols/Cancelable.html#/s:7RxSwift10CancelableP10isDisposedSbvp":{"name":"isDisposed","abstract":"<p>资源是否已被释放</p>","parent_name":"Cancelable"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV1Ea":{"name":"E","abstract":"<p>观察者可以观察到的序列元素的类型。</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV12EventHandlera":{"name":"EventHandler","abstract":"<p>匿名事件处理程序类型</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV12eventHandlerACyxGyAA5EventOyxGc_tcfc":{"name":"init(eventHandler:)","abstract":"<p>构造一个实例, <code>on(event)</code> 方法调用 <code>eventHandler(event)</code></p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverVyACyxGqd__c1EQyd__RszAA0D4TypeRd__lufc":{"name":"init(_:)","abstract":"<p>构造一个实例,<code>on(event)</code> 方法调用 <code>observer.on(event)</code>.</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>发送 <code>event</code> 给这个观察者.</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV02asD0ACyxGyF":{"name":"asObserver()","abstract":"<p>Erases type of observer and returns canonical observer.</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html":{"name":"AnyObserver","abstract":"<p>A type-erased <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ObserverType.html\">ObserverType</a></code>. <a href=\"https://www.jianshu.com/p/0a9c5c66a5fd\">类型擦除</a></p>"},"Protocols/Cancelable.html":{"name":"Cancelable","abstract":"<p>可释放资源协议，资源释放状态协议</p>"},"Protocols/ConnectableObservableType.html":{"name":"ConnectableObservableType","abstract":"<p>Represents an observable sequence wrapper that can be connected and disconnected from its underlying observable sequence.</p>"},"Protocols/Disposable.html":{"name":"Disposable","abstract":"<p>protocol：可处理协议。</p>"},"Enums/Event.html":{"name":"Event","abstract":"<p>表示序列的事件。</p>"},"Structs/GroupedObservable.html":{"name":"GroupedObservable","abstract":"<p>Represents an observable sequence of elements that have a common key.</p>"},"Protocols/ImmediateSchedulerType.html":{"name":"ImmediateSchedulerType","abstract":"<p>协议：表示立即执行调度事件的对象</p>"},"Classes/Observable.html":{"name":"Observable","abstract":"<p>A type-erased <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ObservableType.html\">ObservableType</a></code>. </p>"},"Protocols/ObservableConvertibleType.html":{"name":"ObservableConvertibleType","abstract":"<p>protocol:可以转换为 Observable 序列的类型 (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable&lt;E&gt;</a></code>).</p>"},"Protocols/ObservableType.html":{"name":"ObservableType","abstract":"<p>协议:定义了 subscribe 方法,继承自 <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ObservableConvertibleType.html\">ObservableConvertibleType</a></code>。</p>"},"Protocols/ObserverType.html":{"name":"ObserverType","abstract":"<p>Supports push-style iteration over an observable sequence.</p>"},"Structs/Reactive.html":{"name":"Reactive","abstract":"<p>Use <code>Reactive</code> proxy as customization point for constrained protocol extensions.</p>"},"Protocols/SchedulerType.html":{"name":"SchedulerType","abstract":"<p>表示调度工作单元的对象</p>"},"RxSwift.html":{"name":"RxSwift"},"RxSwift/Disposables.html":{"name":"RxSwift/Disposables"},"RxSwift/Schedulers.html":{"name":"RxSwift/Schedulers"},"RxSwift/Subjects.html":{"name":"RxSwift/Subjects"},"RxSwift/Traits.html":{"name":"RxSwift/Traits"},"Other Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other Global Variables.html":{"name":"Other Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Other Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"},"Other Typealiases.html":{"name":"Other Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}